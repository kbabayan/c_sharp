using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;

namespace project
{
    class Robot // создание класса Робот
    {
        private static int count;   // Создание приватных полей класса. Они могут использоваться только внутри класса
        private string name;
        private int weight;
        private short[] coordinates;        // Поле может использоваться только внутри этого класса, или внутри дочерних классов

        protected string surname;

        public Robot(string name, int weight, short[] coordinates)      // Конструктор класса с выставлением значений сразу
        {
            System.Console.WriteLine("Object has been created");
            this.name = name;
            this.weight = weight;
            this.coordinates = coordinates;
        }

        public Robot(string name)       // Констуктор класса с выставлением только имени
        {
            System.Console.WriteLine("Object has been created");
            this.name = name;
        }

        public Robot() {}       // Конструктор класса по умолчанию

        public int Weight       // Аксессор с гетером и сетером
        {
            get
            {
                return this.weight;
            }
            set
            {
                if (value < 1)
                    this.weight = 1;
                else if (value > 5000)
                    this.weight = 5000;
                else
                    this.weight = value;
            }
        }

        public int Name {get; set; }        // Тоже аксессор, но не расписанный

        public void setValues(string name, int weight, short[] coordinates)     // Метод класса для установки параметров
        {
            this.name = name;
            this.weight = weight;
            this.coordinates = coordinates;
        }

        public void printValues()       // Метод класса для вывода параметоров
        {
            System.Console.WriteLine("Object " + this.name + "Weight " + this.weight + " Coordinates:");
            foreach(byte el in this.coordinates)
                System.Console.WriteLine(el);
        }
    }

    class Killer : Robot        // Создание нового класса наследованием
    {
        public Killer(string name, int weight, short[] coordinates, int health) : base(name, weight, coordinates)       // Конструктор
        {
            this.Health = health;
            base.printValues();
        }

        public Killer() {}      // Конструктор по умолчанию

        public int Health {get; set; }      // Аксессор

        public void Laser()     // Новый метод
        {
            System.Console.WriteLine("Laser shooting");
            this.surname = "Doe";
        }
    }
    class Program
    {
        public static void PrintHello(string word)      // Просто функция в основном классе
        {
            System.Console.Write(word);
            System.Console.Write(" ");
        }

        static void Main()
        {
            Robot bot = new Robot("Bot", 800, new short[] {0, 0, 10});      // Создание экземпляра класса (объекта)
            bot.printValues();      // Применение написанного метода

            Robot killer = new Robot();     // Создание второго экземпляра класса
            killer.setValues("Killer", 2000, new short[] {10, 10, 0});      // Установка параметров с помощью метода
            killer.printValues();       // Вывод параметров экземпляра класса с помощью метода

            Killer killer1 = new Killer("Killer", 3500, new short[] {5, 1, 3}, 100);
            killer1.Laser();
        }
    }
}
